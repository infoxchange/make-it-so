name: Publish Package
on:
  push:
    branches:
      - main
      - internal-testing-*

permissions:
  contents: read # for checkout

jobs:
  verify:
    name: Verify
    uses: ./.github/workflows/verify.yml

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: verify
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get node version
        id: get-node-version
        shell: bash
        run: echo "node-version=$(jq -r '.engines.node // "lts/*"' package.json)" >> "$GITHUB_OUTPUT"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # We could use `node-version-file: "package.json"` here but that will give a warning if there's no version
          # specified rather than just silently defaulting to "lts/*"
          node-version: ${{ steps.get-node-version.outputs.node-version }}

      - name: Install dependencies
        run: npm clean-install

      - name: Build
        run: npm run build

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Get version and create annotation
        run: |
          VERSION=$(jq -r '.version' package.json)
          if [[ ! "$VERSION" == 0.0.0* ]]; then
            echo "### :rocket: Published version: $VERSION" >> $GITHUB_STEP_SUMMARY
          fi
